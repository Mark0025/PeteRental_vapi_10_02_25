name: Docker Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger from GitHub UI

env:
  DOCKER_IMAGE: mark0025/peterentalvapi
  DOCKER_TAG: latest

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv sync

      - name: Run database tests
        run: |
          uv run python -c "from rental_database import rental_db; stats = rental_db.get_database_stats(); print(f'‚úÖ Database OK: {stats}')"

      - name: Test imports
        run: |
          uv run python -c "import main; import rental_database; import langchain_rental_scraper; print('‚úÖ All imports successful')"

      - name: Check FastAPI app starts
        run: |
          uv run python -c "from main import app; print('‚úÖ FastAPI app loaded successfully')"

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test  # Only run if tests pass
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

      - name: Image digest
        run: echo "Image pushed with digest ${{ steps.build-and-push.outputs.digest }}"

      - name: Notify deployment
        run: |
          echo "üöÄ Docker image deployed to Docker Hub"
          echo "üì¶ Image: ${{ env.DOCKER_IMAGE }}:latest"
          echo "üîó Render will auto-deploy in 2-3 minutes"

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, build-and-push]
    if: always()

    steps:
      - name: Check job status
        run: |
          if [ "${{ needs.test.result }}" == "failure" ]; then
            echo "‚ùå Tests failed"
            exit 1
          fi
          if [ "${{ needs.build-and-push.result }}" == "failure" ]; then
            echo "‚ùå Build/Push failed"
            exit 1
          fi
          echo "‚úÖ All jobs succeeded"
